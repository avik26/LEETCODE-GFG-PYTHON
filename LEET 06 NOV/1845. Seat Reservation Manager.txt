import heapq

class SeatManager:

    def __init__(self, n: int):
        self.available_seats = list(range(1, n + 1))
        heapq.heapify(self.available_seats)

    def reserve(self) -> int:
        if self.available_seats:
            seat = heapq.heappop(self.available_seats)
            return seat

    def unreserve(self, seatNumber: int) -> None:
        heapq.heappush(self.available_seats, seatNumber)

# Example usage:
# seatManager = SeatManager(5)
# print(seatManager.reserve())  # Output: 1
# print(seatManager.reserve())  # Output: 2
# seatManager.unreserve(2)
# print(seatManager.reserve())  # Output: 2
# print(seatManager.reserve())  # Output: 3
# print(seatManager.reserve())  # Output: 4
# print(seatManager.reserve())  # Output: 5
# seatManager.unreserve(5)
