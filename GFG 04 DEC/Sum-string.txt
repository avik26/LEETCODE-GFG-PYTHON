#User function Template for python3
class Solution:
    def sumStrings(self, s1, s2):
        i, j = len(s1) - 1, len(s2) - 1
        ans = []
        carry = 0

        while i >= 0 and j >= 0:
            x, y = int(s1[i]), int(s2[j])
            res = x + y + carry
            rem = res % 10
            carry = res // 10
            ans.append(str(rem))
            i -= 1
            j -= 1

        while i >= 0:
            x = int(s1[i])
            res = x + carry
            rem = res % 10
            carry = res // 10
            ans.append(str(rem))
            i -= 1

        while j >= 0:
            y = int(s2[j])
            res = y + carry
            rem = res % 10
            carry = res // 10
            ans.append(str(rem))
            j -= 1

        while carry:
            rem = carry % 10
            ans.append(str(rem))
            carry //= 10

        ans.reverse()
        return ''.join(ans)

    def solve(self, s, pos, l1, l2):
        s1 = s[pos:pos + l1]
        s2 = s[pos + l1:pos + l1 + l2]
        s3 = self.sumStrings(s1, s2)
        n = len(s3)

        if n > len(s) - pos - l1 - l2:
            return False

        if s[pos + l1 + l2:pos + l1 + l2 + n] == s3:
            if pos + l1 + l2 + n == len(s):
                return True
            return self.solve(s, pos + l1, l2, n)

        return False

    def isSumString(self, s):
        n = len(s)
        for i in range(1, n):
            for j in range(1, n - i):
                if self.solve(s, 0, i, j):
                    return 1
        return 0