# Node Class:
class Node:
    def __init__(self, val):
        self.data = val
        self.left = None
        self.right = None

# Function to return a list containing the in-order traversal of the tree.
class Solution:
    def InOrder(self, root):
        result = []  # List to store the in-order traversal

        def in_order_traversal(node):
            if node is not None:
                # Traverse the left subtree
                in_order_traversal(node.left)
                # Visit the current node
                result.append(node.data)
                # Traverse the right subtree
                in_order_traversal(node.right)

        in_order_traversal(root)  # Start the traversal from the root

        return result
