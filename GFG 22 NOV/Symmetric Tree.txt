class Solution:
    def isSymmetric(self, root):
        # Helper function to check if two trees are symmetric
        def isMirror(left, right):
            # If both trees are empty, they are symmetric
            if not left and not right:
                return True
            # If one of the trees is empty, they are not symmetric
            if not left or not right:
                return False
            # Check if the values of the root nodes are equal
            # and if the left subtree of the left tree is symmetric
            # with the right subtree of the right tree, and vice versa
            return (left.data == right.data) and \
                   isMirror(left.left, right.right) and \
                   isMirror(left.right, right.left)

        # Check if the tree is symmetric starting from the root
        return isMirror(root, root)

# Rest of the code remains the same...
